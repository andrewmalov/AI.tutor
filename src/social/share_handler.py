"""
Module for handling social media sharing
"""
from aiogram import Router, F
from aiogram.types import CallbackQuery, FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
import os
import tempfile

from src.social.share_generator import generate_share_image
from src.gamification.xp_system import user_xp_data, award_achievement

# Create a router
router = Router()

# Store user share count (in a real app, this would be in a database)
user_shares = {}

@router.callback_query(F.data.startswith("share_"))
async def share_progress(callback: CallbackQuery):
    """
    Handle the share progress button
    """
    await callback.answer()
    
    user_id = callback.from_user.id
    lesson_id = int(callback.data.split("_")[1])
    
    # Get user data
    if user_id not in user_xp_data:
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.")
        return
    
    user_data = user_xp_data[user_id]
    
    # Generate share image
    image_bio = await generate_share_image(user_data)
    
    # Save image to temporary file
    with tempfile.NamedTemporaryFile(delete=False, suffix='.png') as temp_file:
        temp_file.write(image_bio.getvalue())
        temp_file_path = temp_file.name
    
    # Send image to user
    await callback.message.answer_photo(
        FSInputFile(temp_file_path),
        caption=(
            f"üöÄ –Ø –Ω–∞ —É—Ä–æ–≤–Ω–µ {user_data['level']} –≤ Python Tutor Bot!\n"
            f"–ü—Ä–æ–π–¥–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {len(user_data.get('completed_lessons', []))}\n"
            f"–î–Ω–µ–π –ø–æ–¥—Ä—è–¥: {user_data['streak_days']}\n\n"
            f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –æ–±—É—á–µ–Ω–∏—é! t.me/your_bot_username"
        )
    )
    
    # Create keyboard with share buttons
    builder = InlineKeyboardBuilder()
    builder.button(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Twitter", url="https://twitter.com/intent/tweet?text=–Ø+—É—á—É+Python+—Å+Python+Tutor+Bot!+t.me/your_bot_username")
    builder.button(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Facebook", url="https://www.facebook.com/sharer/sharer.php?u=t.me/your_bot_username")
    
    await callback.message.answer(
        "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö!",
        reply_markup=builder.as_markup()
    )
    
    # Clean up temporary file
    os.unlink(temp_file_path)
    
    # Track share count
    if user_id not in user_shares:
        user_shares[user_id] = 1
    else:
        user_shares[user_id] += 1
    
    # Check for social butterfly achievement
    if user_shares[user_id] == 3:
        await award_achievement(user_id, "social_butterfly", "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞", "–í—ã –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —Å–≤–æ–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º 3 —Ä–∞–∑–∞!")